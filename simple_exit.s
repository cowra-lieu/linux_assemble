# 目的：退出，并向linux内核返回一个状态码的简单程序
#
# 输入：无
#
# 输出：返回一个状态码。在程序进程退出后，可通过echo $?来读取。
#
# 变量：
#	%eax 保存系统调用号
#	%ebx 保存返回状态
#
.section .data

.section .text
.global _start
_start:
movl $1, %eax	# 用于退出程序的Linux内核命令号

# 进行系统调用，必须将系统调用号设置到 %eax 寄存器
# 不同的系统调用，可能要求其他寄存器也有值
# 比如 exit() 系统调用，需要把状态码设置到 %ebx 寄存器

movl $0, %ebx	# 返回给操作系统的状态码，改变这个值，那么echo $?也会相应改变

# int 表示中断，后面跟中断号，中断号是一个立即数，任何情况下，使用立即数都不要忘记$前缀，否则变成“直接寻址”
# 汇编程序中，光突突的一个数值，总是代表直接寻址对应的内存地址
# 中断什么呢？中断当前的程序流，把cpu控制权从当前用户进程转移给内核
# 内核在完成中断处理后，会把cpu控制权交回

int $0x80	# 唤醒内核进行系统调用（内核会检查 %eax寄存器）
